// Generated by LiveScript 1.4.0
(function(){
  var ForList, CopyDefaults, Main;
  ForList = function(Default, UserSpecific, type){
    var Combined;
    type == null && (type = "merge-right");
    switch (type) {
    case "merge-left":
      Combined = Default.concat(UserSpecific);
      break;
    case "merge-right":
      Combined = UserSpecific.concat(Default);
    }
    return Combined;
  };
  CopyDefaults = function(Default, UserSpecific, type){
    var Keys, i$, len$, I, results$ = [];
    type == null && (type = "merge-right");
    Keys = Object.keys(Default);
    for (i$ = 0, len$ = Keys.length; i$ < len$; ++i$) {
      I = Keys[i$];
      if (UserSpecific[I] === undefined) {
        if (typeof Default[I] === "object") {
          if (Array.isArray(Default[I])) {
            UserSpecific[I] = [];
            results$.push(UserSpecific[I] = ForList(Default[I], UserSpecific[I], type));
          } else {
            UserSpecific[I] = {};
            results$.push(CopyDefaults(Default[I], UserSpecific[I]));
          }
        } else {
          results$.push(UserSpecific[I] = Default[I]);
        }
      } else {
        if (typeof Default[I] === "object") {
          if (Array.isArray(Default[I])) {
            results$.push(UserSpecific[I] = ForList(Default[I], UserSpecific[I], type));
          } else {
            results$.push(CopyDefaults(Default[I], UserSpecific[I]));
          }
        }
      }
    }
    return results$;
  };
  Main = {};
  Main.ShowList = function(List){
    return console.log(JSON.stringify(List, null, "\t"));
  };
  Main.CopyDefaults = CopyDefaults;
  module.exports = Main;
}).call(this);
